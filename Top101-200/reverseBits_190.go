package main

/*要求:颠倒给定的 32 位无符号整数的二进制位。
示例:
输入：n = 00000010100101000001111010011100
输出：964176192 (00111001011110000010100101000000)
解释：输入的二进制串 00000010100101000001111010011100 表示无符号整数 43261596，
     因此返回 964176192，其二进制表示形式为 00111001011110000010100101000000。
*/

func reverseBits(num uint32) (rev uint32) {
	// 对32位二进制数进行遍历
	for i := 0; i < 32 && num > 0; i++ {
		// num &0000 0000 0000 0000 0000 0000 0000 0001 取出num的最右边一位
		rev = rev | (num & 1 << (31 - i)) // 将num最右边一位左移（31-i）位 赋给rev
		num = num >> 1                    // 将最右边第一位剔除，第二位变成最右边第一位
	}
	return
}
